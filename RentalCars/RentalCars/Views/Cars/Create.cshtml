@model RentalCars.Models.Car

@{
    ViewBag.Title = "Create";
}

<!-- Plugged in my own .css file -->
@Styles.Render("~/Content/Styles.css")

<h2>Create</h2> <!-- Main Title -->

<!-- FORM BEGINS -->
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Car</h4> <!-- Title -->
        <hr />

        <!-- Displays validation errors -->
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Label for Manufacturer -->
        <div class="form-group">
            @Html.LabelFor(model => model.Manufacturer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Manufacturer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Manufacturer, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Label for Manufacturer/ -->

        <!-- Label for Model -->
        <div class="form-group">
            @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Label for Model/ -->

        <!-- Label for Licence plate -->
        <div class="form-group">
            @Html.LabelFor(model => model.LicencePlate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LicencePlate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LicencePlate, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Label for Licence Plate/ -->

        <!-- Label for Year -->
        <div class="form-group">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control", type = "date" } }) <!-- Added type = "date" -->
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Label for Year/ -->
        <br />

        <!-- Checkbox -->
        <!-- Title -->
        @Html.LabelFor(model => model.Available, new { @class = "form-check-label", @for = "flexCheckDefault" })

        <!-- Checkbox YES -->
        <div class="form-group">
            <div class="col-md-10">
                <div class="form-check">
                    @Html.RadioButtonFor(model => model.Available, true, new { @class = "form-check-input", id = "flexCheckDefault", @checked = "checked" }) <!-- Added "checked" so it is by default checked -->
                    @Html.LabelFor(model => model.Available, "Yes", new { @class = "form-check-label", @for = "flexCheckDefault" })
                </div>
            </div>
        </div>
        <!-- Checkbox YES/ -->

        <!-- Checkbox NO -->
        <div class="form-group">
            <div class="col-md-10">
                <div class="form-check">
                    @Html.RadioButtonFor(model => model.Available, false, new { @class = "form-check-input", id = "flexCheckDefault" })
                    @Html.LabelFor(model => model.Available, "No", new { @class = "form-check-label", @for = "flexCheckDefault" })
                </div>
            </div>
        </div>
        <!-- Checkbox NO/ -->
        <br />
        <!-- Checkbox/ -->

        <!-- Create button -->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-outline-light" id="btnDel" />
            </div>
        </div>
        <br />
        <!-- Create button/ -->
    </div>
}
<!-- FORM ENDS/ -->

<!-- Back to list button -->
<button type="button" class="btn btn-outline-primary">@Html.ActionLink("Back to List", "Index")</button>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
