@model RentalCars.Models.Customer

@{
    ViewBag.Title = "Edit";
}

<!-- Plugged in my own .css file -->
@Styles.Render("~/Content/Styles.css")

<h2>Edit</h2> <!-- Main Title -->


<!-- Form BEGINS -->
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Customer</h4> <!-- Title -->
        <hr />

        <!-- Displays validation errors -->
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CustomerID)

        <!-- Label for Name -->
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Label for Name/ -->

        <!-- Label for DriverLicNo -->
        <div class="form-group">
            @Html.LabelFor(model => model.DriverLicNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DriverLicNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DriverLicNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Label for DriverLicNo/ -->
        <br />

        <!-- Save button -->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-outline-success" id="btnDel" />
            </div>
        </div>
        <br />
        <!-- Save button/ -->
    </div>
}
<!-- Form ENDS/ -->

<!-- Back to list button -->
<button type="button" class="btn btn-outline-primary">@Html.ActionLink("Back to List", "Index")</button>
<!-- Back to list button/ -->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
